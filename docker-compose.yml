version: '3.8'

services:
  mysql:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: mysql-newrelic
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_logs:/var/log/mysql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  api-layer:
    build:
      context: ./api-layer
      dockerfile: Dockerfile
    container_name: api-layer
    ports:
      - "3000:3000"
    environment:
      MYSQL_HOST: mysql-newrelic
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: employees
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  load-generator:
    build:
      context: ./load-generator
      dockerfile: Dockerfile
    container_name: load-generator
    environment:
      API_URL: http://api-layer:3000
      NEW_RELIC_LICENSE_KEY: ${NEW_RELIC_LICENSE_KEY}
    depends_on:
      api-layer:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

volumes:
  mysql_data:
  mysql_logs:
