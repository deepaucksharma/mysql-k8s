version: '3.8'

services:
  mysql:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    container_name: mysql-newrelic
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=employees
      - TZ=UTC
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./configs/mysql/my.cnf:/etc/mysql/my.cnf
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - performance-net
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  api-layer:
    build: 
      context: ./api-layer
      dockerfile: Dockerfile
    container_name: api-layer
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=${MYSQL_USER:-root}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=employees
      - NEWRELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      - NEWRELIC_APP_NAME=${NEW_RELIC_APP_NAME:-MySQL Performance Demo - API Layer}
      - NODE_ENV=${NODE_ENV:-development}
      - TZ=UTC
    ports:
      - "3000:3000"
    volumes:
      - ./api-layer/logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - performance-net
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  load-generator:
    build: 
      context: ./load-generator
      dockerfile: Dockerfile
    container_name: load-generator
    environment:
      - API_URL=http://api-layer:3000
      - HEALTH_SERVER_URL=http://load-generator:8080
      - NEWRELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
      - TZ=UTC
    ports:
      - "8080:8080"
    volumes:
      - ./load-generator/scripts:/scripts
      - ./load-generator/results:/results
    networks:
      - performance-net
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  performance-net:
    driver: bridge

volumes:
  mysql_data:
